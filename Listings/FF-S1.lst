C51 COMPILER V9.59.0.0   FF_S1                                                             03/14/2021 16:36:55 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE FF_S1
OBJECT MODULE PLACED IN .\Objects\FF-S1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE FF-S1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\FF-
                    -S1.lst) TABS(2) OBJECT(.\Objects\FF-S1.obj)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // TP5.c
   3          //-----------------------------------------------------------------------------
   4          // AUTH: 
   5          // DATE: 
   6          //
   7          // Target: C8051F02x
   8          // Tool chain: KEIL Microvision 4
   9          //
  10          //-----------------------------------------------------------------------------
  11          #include <C8051F020.h>
  12          #include "c8051F020_SFR16.h"
  13          #include "FF-S1_Config.h"
  14          #include "FF-S1_Divers.h"
  15          
  16          unsigned char Intensite=20; //On met à 20% comme valeur d'exemple
  17          unsigned char Lum_ON=20;
  18          unsigned char Lum_OFF=60;
  19          unsigned char Lum_Nbre=10;
  20          int currentNum = 0;
  21          int one_cs = 20828; //Nombre de cycles processeur pour attendre 1cs.
  22          int cptON = 0;
  23          int cptOFF = 0;
  24          int divTimer = 0;
  25          int t_on = 0;
  26          int t_off = 0;
  27          
  28          sbit FREQ_OUT = P3^2;
  29          sbit CHG_FREQ = P0^2;
  30          sbit LED = P1^6;
  31          sbit BOUTON = P3^7;
  32          int i=1;
  33          
  34          #define Reset_Timer3Overflow TMR3CN &= 0x04
  35          #define Disable_Timer3 TMR3CN = 0x00
  36          // Prototypes de Fonctions
  37          
  38          
  39          void Lumiere(unsigned char Intensite,unsigned char Lum_ON,unsigned char Lum_OFF,unsigned char Lum_Nbre){
  40   1        //Gestion de l'intensité
  41   1        t_on = one_cs*(Intensite/100.0);
  42   1        t_off = one_cs - t_on;
  43   1          if (currentNum != Lum_Nbre && Lum_ON != 0 && cptON != 20*Lum_ON){
  44   2            //On garde allumé (à l'intensité qu'on veut) pendant Lum_ON décisecondes
  45   2            cptON++;
  46   2            if(FREQ_OUT) {
  47   3              TMR3RL = 0xFFFF - t_on; //Variable avec Intensite
  48   3          }
  49   2            else {
  50   3              TMR3RL = 0xFFFF - t_off;
  51   3          }
  52   2          //Générateur de signaux
  53   2          FREQ_OUT = !FREQ_OUT;
  54   2          Reset_Timer3Overflow;
C51 COMPILER V9.59.0.0   FF_S1                                                             03/14/2021 16:36:55 PAGE 2   

  55   2          cptOFF = 0; //Reset du compteur de Lum_OFF pour son prochain allumage
  56   2          return ;
  57   2        }
  58   1          else if (currentNum != Lum_Nbre && Lum_OFF != 0 && cptOFF != 20*Lum_OFF){
  59   2            //On garde éteint pendant Lum_OFF millisecondes => On met FREQ_OUT à 0 et on ne rentre plus dans l'ISR 
             -pendant Lum_OFF secondes
  60   2            cptOFF++;
  61   2            FREQ_OUT = 0;
  62   2            TMR3RL = 0xFFFF - 10414; //On le met à la même période que le ON ((TMRRL dutyON + TMRRL dutyOFF )/ 2)
  63   2            Reset_Timer3Overflow;
  64   2            if ( cptOFF == 20*Lum_OFF) {
  65   3              currentNum++;
  66   3              cptON = 0; //Reset du compteur de Lum_ON pour son prochain allumage
  67   3            }
  68   2            return ; //On sort immédiatement de la fonction
  69   2          }
  70   1          //Gestion du rapport cyclique : Mode basique sans clignotement
  71   1        if(FREQ_OUT) {
  72   2          TMR3RL = 0xFFFF - t_on; // A terme, on veut pouvoir influencer ces valeurs de reload avec Intensite
  73   2        }
  74   1        else {
  75   2          TMR3RL = 0xFFF - t_off; // On ne garde PAS à 65535, ça cause des erreurs
  76   2        }
  77   1        //Générateur de signaux
  78   1        FREQ_OUT = !FREQ_OUT;
  79   1        Reset_Timer3Overflow;
  80   1      }
  81          
  82          void Lumiere_Stop(void){
  83   1        //If (Réception du caractère d'extinction par l'UART) {
  84   1        //Disable_Timer3;   //Désactive le signal d'allumage du pointeur
  85   1        //}
  86   1      }
  87          //-----------------------------------------------------------------------------
  88          //-----------------------------------------------------------------------------
  89          // MAIN Routine
  90          //-----------------------------------------------------------------------------
  91          void main (void) {
  92   1             
  93   1          Init_Device();  // Appel des configurations globales
  94   1          
  95   1      // Début Insertion Code Configuration des périphériques ***********************
  96   1       
  97   1        
  98   1      // Fin Code Initialisations ***************************************************
  99   1      
 100   1        
 101   1      // Début Insertion Code Phase Démarrage *************************************** 
 102   1            EA = 1;
 103   1        // Fin Code phase Démarrage ***************************************************
 104   1        
 105   1        
 106   1        while(1)
 107   1              {
 108   2            Lumiere_Stop(); //On vérifie en permanence si on reçoit le caractère d'extinction
 109   2              }                       
 110   1      }
 111          
 112          //-----------------------------------------------------------------------------
 113          //-----------------------------------------------------------------------------
 114          // Fonctions de configuration des divers périphériques
 115          //-----------------------------------------------------------------------------
C51 COMPILER V9.59.0.0   FF_S1                                                             03/14/2021 16:36:55 PAGE 3   

 116          // Insérez vos fonctions de configuration ici
 117          
 118          //-----------------------------------------------------------------------------
 119          //-----------------------------------------------------------------------------
 120          // Fonctions d'interruptions
 121          //-----------------------------------------------------------------------------
 122          // Insérez vos fonctions d'interruption ici
 123          
 124          void ISR_timer3Overflow() interrupt 14
 125          {
 126   1          Lumiere(Intensite,Lum_ON, Lum_OFF, Lum_Nbre);
 127   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    327    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
