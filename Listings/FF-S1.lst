C51 COMPILER V9.59.0.0   FF_S1                                                             03/14/2021 04:08:49 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE FF_S1
OBJECT MODULE PLACED IN .\Objects\FF-S1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE FF-S1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\FF-
                    -S1.lst) TABS(2) OBJECT(.\Objects\FF-S1.obj)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // TP5.c
   3          //-----------------------------------------------------------------------------
   4          // AUTH: 
   5          // DATE: 
   6          //
   7          // Target: C8051F02x
   8          // Tool chain: KEIL Microvision 4
   9          //
  10          //-----------------------------------------------------------------------------
  11          #include <C8051F020.h>
  12          #include "c8051F020_SFR16.h"
  13          #include "FF-S1_Config.h"
  14          #include "FF-S1_Divers.h"
  15          
  16          unsigned char Intensite=0xA; //On met à 10% comme valeur d'exemple
  17          unsigned char Lum_ON=2;
  18          unsigned char Lum_OFF=250;
  19          unsigned char Lum_Nbre=10;
  20          int currentNum = 0;
  21          int one_mil = 0x100; // Nombre arbitraire, on changera plus tard à 1 ds
  22          int cpt = 0;
  23          int divTimer = 0;
  24          
  25          sbit FREQ_OUT = P3^2;
  26          sbit CHG_FREQ = P0^2;
  27          sbit LED = P1^6;
  28          sbit BOUTON = P3^7;
  29          int i=1;
  30          
  31          #define Reset_Timer3Overflow TMR3CN &= 0x04
  32          #define Disable_Timer3 TMR3CN = 0x00
  33          // Prototypes de Fonctions
  34          
  35          
  36          void Lumiere(unsigned char Intensite,unsigned char Lum_ON,unsigned char Lum_OFF,unsigned char Lum_Nbre){
  37   1          if (currentNum != Lum_Nbre && currentNum%2 == 0 && Lum_ON != 0 && cpt != one_mil*Lum_ON){
  38   2            //On garde allumé (à l'intensité qu'on veut) pendant Lum_ON millisecondes
  39   2            cpt = cpt+1;
  40   2            if(FREQ_OUT) {
  41   3              TMR3RL = 0xE018; //Normalement variable avec Intensite
  42   3          }
  43   2            else {
  44   3              TMR3RL = 0xF7DF; // On ne garde PAS à 65535, ça cause des erreurs
  45   3          }
  46   2            //Générateur de signaux
  47   2            FREQ_OUT = !FREQ_OUT;
  48   2            Reset_Timer3Overflow;
  49   2            return ;
  50   2        }
  51   1          else if (currentNum != Lum_Nbre && Lum_OFF !=0){
  52   2            //On garde éteint pendant Lum_OFF millisecondes => On met FREQ_OUT à 0 et on ne rentre plus dans l'ISR 
             -pendant Lum_OFF secondes
  53   2            FREQ_OUT = 0;
C51 COMPILER V9.59.0.0   FF_S1                                                             03/14/2021 04:08:49 PAGE 2   

  54   2            TMR3RL = (0xFFFF-(one_mil*Lum_OFF));
  55   2            currentNum = currentNum + 1;      //Le processeur NE VEUT PAS lire cette ligne, sans raison particulière
  56   2            Reset_Timer3Overflow;
  57   2            cpt = 0; //Reset du compteur de Lum_ON pour son prochain allumage
  58   2            return ; //On sort immédiatement de la fonction
  59   2          }
  60   1          //Gestion du rapport cyclique : Mode basique sans clignotement
  61   1        if(FREQ_OUT) {
  62   2          TMR3RL = 0xF663; // A terme, on veut pouvoir influencer ces valeurs de reload avec Intensite
  63   2        }
  64   1        else {
  65   2          TMR3RL = 0x0; // On ne garde PAS à 65535, ça cause des erreurs
  66   2        }
  67   1        //Générateur de signaux
  68   1        FREQ_OUT = !FREQ_OUT;
  69   1        Reset_Timer3Overflow;
  70   1      }
*** WARNING C280 IN LINE 36 OF FF-S1.c: 'Intensite': unreferenced local variable
  71          
  72          void Lumiere_Stop(void){
  73   1        //If (Réception du caractère d'extinction par l'UART) {
  74   1        //Disable_Timer3;   //Désactive le signal d'allumage du pointeur
  75   1        //}
  76   1      }
  77          //-----------------------------------------------------------------------------
  78          //-----------------------------------------------------------------------------
  79          // MAIN Routine
  80          //-----------------------------------------------------------------------------
  81          void main (void) {
  82   1             
  83   1          Init_Device();  // Appel des configurations globales
  84   1          
  85   1      // Début Insertion Code Configuration des périphériques ***********************
  86   1       
  87   1        
  88   1      // Fin Code Initialisations ***************************************************
  89   1      
  90   1        
  91   1      // Début Insertion Code Phase Démarrage *************************************** 
  92   1            EA = 1;
  93   1        // Fin Code phase Démarrage ***************************************************
  94   1        
  95   1        
  96   1        while(1)
  97   1              {
  98   2            Lumiere_Stop(); //On vérifie en permanence si on reçoit le caractère d'extinction
  99   2              }                       
 100   1      }
 101          
 102          //-----------------------------------------------------------------------------
 103          //-----------------------------------------------------------------------------
 104          // Fonctions de configuration des divers périphériques
 105          //-----------------------------------------------------------------------------
 106          // Insérez vos fonctions de configuration ici
 107          
 108          //-----------------------------------------------------------------------------
 109          //-----------------------------------------------------------------------------
 110          // Fonctions d'interruptions
 111          //-----------------------------------------------------------------------------
 112          // Insérez vos fonctions d'interruption ici
 113          
 114          void ISR_timer3Overflow() interrupt 14
C51 COMPILER V9.59.0.0   FF_S1                                                             03/14/2021 04:08:49 PAGE 3   

 115          {
 116   1        if (divTimer == 2){
 117   2          Lumiere(Intensite,Lum_ON, Lum_OFF, Lum_Nbre);
 118   2          divTimer = 0;
 119   2        }
 120   1        else{
 121   2          Reset_Timer3Overflow;
 122   2        }
 123   1        divTimer = divTimer + 1;
 124   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    249    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
