C51 COMPILER V9.59.0.0   FF_S1                                                             03/14/2021 16:07:39 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE FF_S1
OBJECT MODULE PLACED IN .\Objects\FF-S1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE FF-S1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\FF-
                    -S1.lst) TABS(2) OBJECT(.\Objects\FF-S1.obj)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // TP5.c
   3          //-----------------------------------------------------------------------------
   4          // AUTH: 
   5          // DATE: 
   6          //
   7          // Target: C8051F02x
   8          // Tool chain: KEIL Microvision 4
   9          //
  10          //-----------------------------------------------------------------------------
  11          #include <C8051F020.h>
  12          #include "c8051F020_SFR16.h"
  13          #include "FF-S1_Config.h"
  14          #include "FF-S1_Divers.h"
  15          
  16          unsigned char Intensite=0xA; //On met à 10% comme valeur d'exemple
  17          unsigned char Lum_ON=20;
  18          unsigned char Lum_OFF=60;
  19          unsigned char Lum_Nbre=10;
  20          int currentNum = 0;
  21          int one_cs = 20828; //Nombre de cycles processeur pour attendre 1cs.
  22          int cptON = 0;
  23          int cptOFF = 0;
  24          int divTimer = 0;
  25          
  26          sbit FREQ_OUT = P3^2;
  27          sbit CHG_FREQ = P0^2;
  28          sbit LED = P1^6;
  29          sbit BOUTON = P3^7;
  30          int i=1;
  31          
  32          #define Reset_Timer3Overflow TMR3CN &= 0x04
  33          #define Disable_Timer3 TMR3CN = 0x00
  34          // Prototypes de Fonctions
  35          
  36          
  37          void Lumiere(unsigned char Intensite,unsigned char Lum_ON,unsigned char Lum_OFF,unsigned char Lum_Nbre){
  38   1          if (currentNum != Lum_Nbre && Lum_ON != 0 && cptON != 20*Lum_ON){
  39   2            //On garde allumé (à l'intensité qu'on veut) pendant Lum_ON décisecondes
  40   2            cptON++;
  41   2            if(FREQ_OUT) {
  42   3              TMR3RL = 0xFFFF - 16662; //Normalement variable avec Intensite
  43   3          }
  44   2            else {
  45   3              TMR3RL = 0xFFFF - 4166; // On ne garde PAS à 65535, ça cause des erreurs
  46   3          }
  47   2          //Générateur de signaux
  48   2          FREQ_OUT = !FREQ_OUT;
  49   2          Reset_Timer3Overflow;
  50   2          cptOFF = 0; //Reset du compteur de Lum_OFF pour son prochain allumage
  51   2          return ;
  52   2        }
  53   1          else if (currentNum != Lum_Nbre && Lum_OFF != 0 && cptOFF != 20*Lum_OFF){
  54   2            //On garde éteint pendant Lum_OFF millisecondes => On met FREQ_OUT à 0 et on ne rentre plus dans l'ISR 
C51 COMPILER V9.59.0.0   FF_S1                                                             03/14/2021 16:07:39 PAGE 2   

             -pendant Lum_OFF secondes
  55   2            cptOFF++;
  56   2            FREQ_OUT = 0;
  57   2            TMR3RL = 0xFFFF - 10414; //On le met à la même période que le ON ((TMRRL dutyON + TMRRL dutyOFF )/ 2)
  58   2            Reset_Timer3Overflow;
  59   2            if ( cptOFF == 20*Lum_OFF) {
  60   3              currentNum++;
  61   3              cptON = 0; //Reset du compteur de Lum_ON pour son prochain allumage
  62   3            }
  63   2            return ; //On sort immédiatement de la fonction
  64   2          }
  65   1          //Gestion du rapport cyclique : Mode basique sans clignotement
  66   1        if(FREQ_OUT) {
  67   2          TMR3RL = 0xF663; // A terme, on veut pouvoir influencer ces valeurs de reload avec Intensite
  68   2        }
  69   1        else {
  70   2          TMR3RL = 0x0; // On ne garde PAS à 65535, ça cause des erreurs
  71   2        }
  72   1        //Générateur de signaux
  73   1        FREQ_OUT = !FREQ_OUT;
  74   1        Reset_Timer3Overflow;
  75   1      }
*** WARNING C280 IN LINE 37 OF FF-S1.c: 'Intensite': unreferenced local variable
  76          
  77          void Lumiere_Stop(void){
  78   1        //If (Réception du caractère d'extinction par l'UART) {
  79   1        //Disable_Timer3;   //Désactive le signal d'allumage du pointeur
  80   1        //}
  81   1      }
  82          //-----------------------------------------------------------------------------
  83          //-----------------------------------------------------------------------------
  84          // MAIN Routine
  85          //-----------------------------------------------------------------------------
  86          void main (void) {
  87   1             
  88   1          Init_Device();  // Appel des configurations globales
  89   1          
  90   1      // Début Insertion Code Configuration des périphériques ***********************
  91   1       
  92   1        
  93   1      // Fin Code Initialisations ***************************************************
  94   1      
  95   1        
  96   1      // Début Insertion Code Phase Démarrage *************************************** 
  97   1            EA = 1;
  98   1        // Fin Code phase Démarrage ***************************************************
  99   1        
 100   1        
 101   1        while(1)
 102   1              {
 103   2            Lumiere_Stop(); //On vérifie en permanence si on reçoit le caractère d'extinction
 104   2              }                       
 105   1      }
 106          
 107          //-----------------------------------------------------------------------------
 108          //-----------------------------------------------------------------------------
 109          // Fonctions de configuration des divers périphériques
 110          //-----------------------------------------------------------------------------
 111          // Insérez vos fonctions de configuration ici
 112          
 113          //-----------------------------------------------------------------------------
 114          //-----------------------------------------------------------------------------
C51 COMPILER V9.59.0.0   FF_S1                                                             03/14/2021 16:07:39 PAGE 3   

 115          // Fonctions d'interruptions
 116          //-----------------------------------------------------------------------------
 117          // Insérez vos fonctions d'interruption ici
 118          
 119          void ISR_timer3Overflow() interrupt 14
 120          {
 121   1          Lumiere(Intensite,Lum_ON, Lum_OFF, Lum_Nbre);
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    212    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
